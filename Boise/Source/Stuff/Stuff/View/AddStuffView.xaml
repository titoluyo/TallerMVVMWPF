<UserControl 
    xmlns:stuffCustomEffects="clr-namespace:Stuff.CustomEffects"
    xmlns:simpleControls="clr-namespace:Simple.WPF.Controls;assembly=Simple.WPF"
    xmlns:viewModel="clr-namespace:Stuff.ViewModel"
    xmlns:converters="clr-namespace:Stuff.Converters"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
    x:Class="Stuff.View.AddStuffView" 
    mc:Ignorable="d" 
    d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <converters:ByteArrayToBitmapImageConverter x:Key="byteArrayToBitmapImageConverter" />
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <Storyboard x:Key="sbWaiting">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ellipseWaiting" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" RepeatBehavior="Forever">
                <SplineDoubleKeyFrame KeyTime="00:00:02" Value="359"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.DataContext>
        <viewModel:AddStuffViewModel />
    </UserControl.DataContext>
    <Grid TextOptions.TextFormattingMode="Display">

        <Border Style="{DynamicResource databaseViewOuterBorder}">
            <DockPanel>
                <simpleControls:SearchEntry x:Name="searchEntry" DockPanel.Dock="Top" ToolTip="Enter text to search by title.  Access key for this field is: ALT + T" AccessKeyText="_T" FilterText="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FilterTextBoxWaterMarkText="Search Netflix by title">
                    <i:Interaction.Triggers>
                        <ei:KeyTrigger Key="Return">
                            <i:InvokeCommandAction Command="{Binding SearchByTitleCommand, Mode=OneWay}"/>
                        </ei:KeyTrigger>
                    </i:Interaction.Triggers>
                </simpleControls:SearchEntry>

                <Grid>
                    <!--ScrollViewer.HorizontalScrollBarVisibility="Disabled" forces the TextBlock to use TextWrapping.  Without this, you would have to set widths-->
                    <ListBox x:Name="lbSearchResults" ScrollViewer.HorizontalScrollBarVisibility="Disabled" VerticalAlignment="Stretch" Background="Transparent" ItemsSource="{Binding Path=MovieSearchResults}" SelectionChanged="ListBox_SelectionChanged">
                        <ListBox.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                        </ListBox.Resources>
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                            <Border MaxHeight="250" x:Name="bdr" Padding="2" Background="#FFE1E0E0" CornerRadius="10" Margin="7">

                                                <!--The adorner decorator keeps the validation error adorner visible
                                                This blog post explains in another use case but the same principle applies
                                                http://karlshifflett.wordpress.com/2008/02/19/wpf-validation-errors-disappear-inside-tabcontrol-when-switching-tabitems/-->

                                                <AdornerDecorator>
                                                    <ContentPresenter />
                                                </AdornerDecorator>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter TargetName="bdr" Property="Background" Value="#FFA9A9A9"/>
                                                </Trigger>
                                                <Trigger Property="IsSelected" Value="true">
                                                    <Setter TargetName="bdr" Property="Background" Value="WhiteSmoke"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                        <ListBox.ItemTemplate>
                            <!--I'm using DockPanel to demonstrate how to accomplish the task and because it is a much lighter weight control than the Grid-->
                            <DataTemplate>

                                <!--Big hack going on here.  Needed to have simple loading of images which the below Image control does for free-->
                                <!--But I also needed the Byte[] to store in the database-->
                                <!--So I listen for the Button click on the DockPanel, run some code to extra the Bytes from the image that the user want to save to the local database-->
                                <!--Notice how I had to explicitly set the Image.Source to a BitmapImage so this hack would work.-->
                                <DockPanel KeyboardNavigation.TabNavigation="Cycle" x:Name="rootDockPanel" ButtonBase.Click="DockPanel_Button_Click">
                                    <Image VerticalAlignment="Top"  DockPanel.Dock="Left" Height="90" Width="65" Margin="7" >
                                        <Image.Source>
                                            <BitmapImage UriSource="{Binding Path=ImageURL}" />
                                        </Image.Source>
                                    </Image>

                                    <TextBlock DockPanel.Dock="Top" Margin="0,7,0,0" Text="{Binding Path=Name}" TextWrapping="Wrap" FontSize="12" FontWeight="Bold" MaxHeight="16" />
                                    <TextBlock x:Name="tbCast" DockPanel.Dock="Top" Margin="0,7,0,0" Text="{Binding Path=Cast}" TextWrapping="Wrap" TextTrimming="WordEllipsis" MaxHeight="16" />
                                    <TextBlock x:Name="tbSynopsis" DockPanel.Dock="Top" Margin="0,7,0,0" Text="{Binding Path=Description}" TextWrapping="Wrap" TextTrimming="WordEllipsis" MaxHeight="45" />

                                    <Grid VerticalAlignment="Top" x:Name="addRecord" Visibility="Collapsed" Background="#FFD8D8D8" Margin="7">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <Label Content="Amount Paid" />
                                        <Label Content="Purchased From" Grid.Row="1" IsTabStop="True" />
                                        <Label Content="Media Type" Grid.Row="2" IsTabStop="True" />

                                        <TextBox Grid.Column="1" MaxLength="6" Width="75" Text="{Binding Path=AmountPaid, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                                        <TextBox Grid.Column="1" Grid.Row="1" MaxLength="50" Width="200" Text="{Binding Path=PurchasedFrom, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" />
                                        <ComboBox Grid.Column="1" Grid.Row="2" SelectedIndex="2" SelectedValuePath="Content" SelectedValue="{Binding Path=MediaType, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}">
                                            <ComboBox.Resources>
                                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="LightGray" />
                                                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LightGray" />
                                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                                            </ComboBox.Resources>
                                            <ListBoxItem Content="3D Blue Ray" />
                                            <ListBoxItem Content="Blue Ray" />
                                            <ListBoxItem Content="DVD" />
                                            <ListBoxItem Content="HD DVD" />
                                            <ListBoxItem Content="VHS" />
                                        </ComboBox>
                                        <Button Margin="0,7" Grid.Column="1" Grid.Row="3" VerticalAlignment="Center" HorizontalAlignment="Left" Content="Add" CommandParameter="{Binding}" Command="{Binding DataContext.AddMovieCommand, ElementName=lbSearchResults}" />
                                    </Grid>
                                </DockPanel>
                                <DataTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsSelected}" Value="true"/>
                                            <Condition Binding="{Binding InLocalDatabase}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="addRecord" Property="Visibility" Value="Visible" />
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding InLocalDatabase}" Value="true">
                                        <Setter TargetName="rootDockPanel" Property="Background" Value="LightGreen" />
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>

                    <Ellipse Visibility="{Binding IsSearching, Converter={StaticResource booleanToVisibilityConverter}}" IsVisibleChanged="ellipseWaiting_IsVisibleChanged" Fill="{x:Null}" StrokeThickness="12" RenderTransformOrigin="0.5,0.5" x:Name="ellipseWaiting" HorizontalAlignment="Center" Width="171" VerticalAlignment="Center" Height="171">
                        <Ellipse.OpacityMask>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FF000000" Offset="0"/>
                                <GradientStop Color="#FFFFFFFF" Offset="1"/>
                            </LinearGradientBrush>
                        </Ellipse.OpacityMask>
                        <Ellipse.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Ellipse.RenderTransform>
                        <Ellipse.Stroke>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFF2A346" Offset="0"/>
                                <GradientStop Color="Black" Offset="0.988"/>
                            </LinearGradientBrush>
                        </Ellipse.Stroke>
                    </Ellipse>

                </Grid>

            </DockPanel>
        </Border>

        <Border Background="{DynamicResource formAndButtonBarsBrush}" Margin="20,2" Padding="5,1,5,1" BorderBrush="Black" BorderThickness="1" CornerRadius="7,0,7,7" VerticalAlignment="Top" HorizontalAlignment="Stretch">
            <DockPanel>
                <Button ToolTip="Click to close this screen." Margin="7,0" Height="16" DockPanel.Dock="Right" Command="{Binding ShowBrowseStuffViewCommand}">
                    <Button.Template>
                        <ControlTemplate>
                            <Image Source="/Stuff;component/Images/close.png" Height="16" Width="16">
                                <Image.Effect>
                                    <stuffCustomEffects:GreyscaleEffect />
                                </Image.Effect>
                            </Image>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <TextBlock DockPanel.Dock="Left" Margin="7" FontWeight="Bold" Foreground="White" Text="Add New Movies" VerticalAlignment="Top" HorizontalAlignment="Left" />
            </DockPanel>

        </Border>
    </Grid>

</UserControl>
